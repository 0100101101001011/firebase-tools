name: Node.js Tests

on: [push, pull_request]

jobs:
  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.x, 10.x]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: 'Cache Node'
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
    - run: npm ci
    - run: npm test
      env:
        CI: true

  # TODO;
  #  * Cache the npm install step (per node version)
  #  * Cache the emulators
  #  * Make actions a required check
  #  * Remove travis-specific testing logic
  integration:
    needs: unit
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [8.x]
        script: [
          ./scripts/test-hosting.sh, 
          ./scripts/test-triggers-end-to-end.sh
        ]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 8.x
    
    - name: 'Cache Node'
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
    
    - name: 'Cache Emulators'
      uses: actions/cache@v1
      with:
        path: ~/.cache/firebase/emulators
        key: ${{ runner.os }}-firebase-emulators
  
    - run: npm ci
    - run: echo ${{ secrets.creds_private_json_base64 }} | base64 -d > ./scripts/creds-private.json
    - run: echo ${{ secrets.creds_private_json_base64 }} | base64 -d > ./scripts/creds-public.json
    - run: ${{ matrix.script }}
      env:
        FBTOOLS_TARGET_PROJECT: ${{ secrets.FBTOOLS_TARGET_PROJECT }}
        CI: true
    
    - name: Print failure logs
      if: failure()
      run: cat *debug.log
  

